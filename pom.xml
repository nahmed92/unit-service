<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.etilize.burraq.unit</groupId>
    <artifactId>unit-service</artifactId>
    <version>1.0.0-SNAPSHOT</version>
    <packaging>jar</packaging>

    <name>Unit Service</name>
    <description>Unit service provide services to store units and value conversion across units</description>

    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>1.5.4.RELEASE</version>
        <relativePath/> <!-- lookup parent from repository -->
    </parent>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <java.version>1.8</java.version>
        <project.build.itDirectory>src/it/java</project.build.itDirectory>
        <sonar.host.url>http://sonar.etilizepak.com</sonar.host.url>
        <docker.repo.url>repo.etilizepak.com:444</docker.repo.url>
        <docker.image.prefix>etilize</docker.image.prefix>
    </properties>

    <inceptionYear>2017</inceptionYear>

    <organization>
        <name>Etilize</name>
        <url>http://www.etilize.com</url>
    </organization>

    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
            <version>3.5</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-mongodb</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-rest</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.data</groupId>
            <artifactId>spring-data-rest-hal-browser</artifactId>
        </dependency>
        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
            <version>20.0</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-logging</artifactId>
        </dependency>
        <dependency>
            <groupId>io.github.hzpz.spring.boot</groupId>
            <artifactId>mongeez-spring-boot-starter</artifactId>
            <version>1.3.0</version>
        </dependency>
        <dependency>
            <groupId>de.codecentric</groupId>
            <artifactId>spring-boot-admin-starter-client</artifactId>
            <version>1.4.5</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-configuration-processor</artifactId>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.ow2.asm</groupId>
            <artifactId>asm-all</artifactId>
            <version>6.0_ALPHA</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>de.flapdoodle.embed</groupId>
            <artifactId>de.flapdoodle.embed.mongo</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>nl.jqno.equalsverifier</groupId>
            <artifactId>equalsverifier</artifactId>
            <version>2.1.7</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.lordofthejars</groupId>
            <artifactId>nosqlunit-mongodb</artifactId>
            <version>0.10.0</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.openpojo</groupId>
            <artifactId>openpojo</artifactId>
            <version>0.8.4</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <finalName>unit-service</finalName>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.sonarsource.scanner.maven</groupId>
                <artifactId>sonar-maven-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>com.spotify</groupId>
                <artifactId>docker-maven-plugin</artifactId>
                <version>0.4.13</version>
                <configuration>
                    <imageName>${docker.repo.url}/${docker.image.prefix}/${project.artifactId}</imageName>
                    <dockerDirectory>src/main/docker</dockerDirectory>
                    <registryUrl>${docker.repo.url}</registryUrl>
                    <serverId>deployment</serverId>
                    <resources>
                        <resource>
                            <targetPath>/</targetPath>
                            <directory>${project.build.directory}</directory>
                            <include>${project.build.finalName}.jar</include>
                        </resource>
                    </resources>
                </configuration>
            </plugin>
        </plugins>

        <pluginManagement>
            <plugins>
                <!-- Error Prone integration -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>3.3</version>
                    <configuration>
                        <compilerId>javac-with-errorprone</compilerId>
                        <forceJavacCompilerUse>true</forceJavacCompilerUse>
                        <!-- maven-compiler-plugin defaults to targeting Java 5, but our javac
                        only supports >=6 -->
                        <source>${java.version}</source>
                        <target>${java.version}</target>
                        <showWarnings>true</showWarnings>
                    </configuration>
                    <dependencies>
                        <dependency>
                            <groupId>org.codehaus.plexus</groupId>
                            <artifactId>plexus-compiler-javac-errorprone</artifactId>
                            <version>2.8</version>
                        </dependency>
                        <!-- override plexus-compiler-javac-errorprone's dependency on
                        Error Prone with the latest version -->
                        <dependency>
                            <groupId>com.google.errorprone</groupId>
                            <artifactId>error_prone_core</artifactId>
                            <version>2.0.15</version>
                        </dependency>
                    </dependencies>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <configuration>
                        <systemProperties>
                            <property>
                                <name>user.language</name>
                                <value>en</value>
                            </property>
                        </systemProperties>
                        <forkMode>once</forkMode>
                        <failIfNoTests>false</failIfNoTests>
                        <excludes>
                            <exclude>**/*IT.java</exclude>
                        </excludes>
                        <workingDirectory>${project.build.directory}</workingDirectory>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.sonarsource.scanner.maven</groupId>
                    <artifactId>sonar-maven-plugin</artifactId>
                    <version>3.0.1</version>
                </plugin>
            </plugins>
        </pluginManagement>
    </build>

    <profiles>
        <!-- Profile to be run by developers to add license and format code -->
        <profile>
            <id>dev</id>
            <properties>
                <sonar.analysis.mode>preview</sonar.analysis.mode>
                <sonar.issuesReport.console.enable>true</sonar.issuesReport.console.enable>
                <sonar.issuesReport.html.enable>true</sonar.issuesReport.html.enable>
                <sonar.exclusions>**/generated-sources/**</sonar.exclusions>
            </properties>
            <build>
                <plugins>
                    <!-- license configuration -->
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>license-maven-plugin</artifactId>
                        <version>1.7</version>
                        <executions>
                            <execution>
                                <phase>process-sources</phase>
                                <goals>
                                    <goal>update-file-header</goal>
                                </goals>
                            </execution>
                        </executions>
                        <configuration>
                            <licenseName>etilize</licenseName>
                            <licenseResolver>classpath://license</licenseResolver>
                            <processStartTag>#region</processStartTag>
                            <processEndTag>#endregion</processEndTag>
                            <sectionDelimiter>%%</sectionDelimiter>
                            <addJavaLicenseAfterPackage>false</addJavaLicenseAfterPackage>
                            <excludes>
                                <exclude>**/*.js</exclude>
                            </excludes>
                        </configuration>
                        <dependencies>
                            <dependency>
                                <groupId>com.etilize.build</groupId>
                                <artifactId>etilize-build-tools</artifactId>
                                <version>0.0.1-SNAPSHOT</version>
                            </dependency>
                        </dependencies>
                    </plugin>
                    <!-- code formatting -->
                    <plugin>
                        <groupId>net.revelc.code.formatter</groupId>
                        <artifactId>formatter-maven-plugin</artifactId>
                        <version>2.0.1</version>
                        <executions>
                            <execution>
                                <phase>process-sources</phase>
                                <goals>
                                    <goal>format</goal>
                                </goals>
                            </execution>
                        </executions>
                        <configuration>
                            <configFile>eclipse/formatter.xml</configFile>
                            <importOrderFile>eclipse/etilize.importorder</importOrderFile>
                            <directories>
                                <directory>${project.build.sourceDirectory}</directory>
                                <directory>${project.build.testSourceDirectory}</directory>
                                <directory>${project.build.itDirectory}</directory>
                                <directory>${project.build.directory}/generated-sources</directory>
                            </directories>
                        </configuration>
                        <dependencies>
                            <dependency>
                                <groupId>com.etilize.build</groupId>
                                <artifactId>etilize-build-tools</artifactId>
                                <version>0.0.2-SNAPSHOT</version>
                            </dependency>
                        </dependencies>
                    </plugin>
                    <!-- removes trailing spaces -->
                    <plugin>
                        <groupId>com.google.code.maven-replacer-plugin</groupId>
                        <artifactId>replacer</artifactId>
                        <version>1.5.3</version>
                        <executions>
                            <execution>
                                <phase>process-sources</phase>
                                <goals>
                                    <goal>replace</goal>
                                </goals>
                            </execution>
                        </executions>
                        <configuration>
                            <includes>
                                <include>${project.build.sourceDirectory}/**/*.java</include>
                                <include>${project.build.testSourceDirectory}/**/*.java</include>
                            </includes>
                            <!-- not using \s as it removes blank lines as
                                well -->
                            <token>[ ]+$</token>
                            <value />
                            <regexFlags>
                                <regexFlag>MULTILINE</regexFlag>
                            </regexFlags>
                        </configuration>
                    </plugin>
                    <plugin>
                        <groupId>org.sonarsource.scanner.maven</groupId>
                        <artifactId>sonar-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>sonar</goal>
                                </goals>
                                <phase>prepare-package</phase>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <!-- profile for integration test -->
        <profile>
            <id>it</id>
            <dependencyManagement>
                <dependencies>
                    <!-- citrus-core needs version 2.2 and spring needs 1.2 -->
                    <dependency>
                        <groupId>net.minidev</groupId>
                        <artifactId>json-smart</artifactId>
                        <version>2.2</version>
                    </dependency>
                    <!-- citrus-core needs version 2.0.0 and spring needs
                        0.9.1 -->
                    <dependency>
                        <groupId>com.jayway.jsonpath</groupId>
                        <artifactId>json-path</artifactId>
                        <version>2.0.0</version>
                    </dependency>
                </dependencies>
            </dependencyManagement>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>build-helper-maven-plugin</artifactId>
                        <version>1.5</version>
                        <executions>
                            <execution>
                                <id>add-test-sources</id>
                                <phase>generate-test-sources</phase>
                                <goals>
                                    <goal>add-test-source</goal>
                                </goals>
                                <configuration>
                                    <sources>
                                        <source>src/it/java</source>
                                    </sources>
                                </configuration>
                            </execution>
                            <execution>
                                <id>add-test-resources</id>
                                <phase>generate-test-resources</phase>
                                <goals>
                                    <goal>add-test-resource</goal>
                                </goals>
                                <configuration>
                                    <resources>
                                        <resource>
                                            <directory>src/it/resources</directory>
                                            <targetPath>${testOutputDirectory}</targetPath>
                                        </resource>
                                    </resources>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <!-- run the integration tests -->
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-failsafe-plugin</artifactId>
                        <configuration>
                            <skipTests>${skipITs}</skipTests>
                        </configuration>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>integration-test</goal>
                                    <goal>verify</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <!-- Profile to be run on the CI server, JARs JavaDocs -->
            <id>ci</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-javadoc-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>package-javadoc</id>
                                <goals>
                                    <goal>jar</goal>
                                </goals>
                                <phase>package</phase>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>

    <distributionManagement>
        <repository>
            <id>deployment</id>
            <name>Internal Releases</name>
            <url>http://repo.etilizepak.com/repository/maven-releases/</url>
        </repository>
        <snapshotRepository>
            <id>deployment</id>
            <name>Internal Releases</name>
            <url>http://repo.etilizepak.com/repository/maven-snapshots/</url>
        </snapshotRepository>
    </distributionManagement>

</project>
